apiVersion: batch/v1
kind: CronJob
metadata:
  name: aggregate-feedback
spec:
  schedule: "18 10 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: aggregate-feedback
            app.kubernetes.io/part-of: frontend-cronjobs
            app.kubernetes.io/component: omegaup-frontend
        spec:
          restartPolicy: OnFailure
          containers:
          - name: cronjob
            image: omegaup/frontend-sidecar
            imagePullPolicy: IfNotPresent
            command:
            - /opt/omegaup/stuff/cron/aggregate_feedback.py
            - --log-json
            - --port=3306
            volumeMounts:
            - name: omegaup
              mountPath: /opt/omegaup
            - name: cronjobs-secret
              mountPath: /home/ubuntu/.my.cnf
              subPath: my.cnf
          initContainers:
          - name: init-volume
            image: omegaup/frontend
            imagePullPolicy: IfNotPresent
            command: ['rsync', '-az', '/opt/omegaup/', '/mnt/omegaup/']
            volumeMounts:
            - name: omegaup
              mountPath: /mnt/omegaup
          volumes:
          - name: omegaup
            emptyDir: {}
          - name: cronjobs-secret
            secret:
              secretName: cronjobs-secret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: update-ranks
spec:
  schedule: "19 8 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: update-ranks
            app.kubernetes.io/part-of: frontend-cronjobs
            app.kubernetes.io/component: omegaup-frontend
        spec:
          restartPolicy: OnFailure
          containers:
          - name: cronjob
            image: omegaup/frontend-sidecar
            imagePullPolicy: IfNotPresent
            command:
            - /opt/omegaup/stuff/cron/update_ranks.py
            - --log-json
            - --port=3306
            volumeMounts:
            - name: omegaup
              mountPath: /opt/omegaup
            - name: cronjobs-secret
              mountPath: /home/ubuntu/.my.cnf
              subPath: my.cnf
          initContainers:
          - name: init-volume
            image: omegaup/frontend
            imagePullPolicy: IfNotPresent
            command: ['rsync', '-az', '/opt/omegaup/', '/mnt/omegaup/']
            volumeMounts:
            - name: omegaup
              mountPath: /mnt/omegaup
          volumes:
          - name: omegaup
            emptyDir: {}
          - name: cronjobs-secret
            secret:
              secretName: cronjobs-secret
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: assign-badges
spec:
  schedule: "23 9 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: assign-badges
            app.kubernetes.io/part-of: frontend-cronjobs
            app.kubernetes.io/component: omegaup-frontend
        spec:
          restartPolicy: OnFailure
          containers:
          - name: cronjob
            image: omegaup/frontend-sidecar
            imagePullPolicy: IfNotPresent
            command:
            - /opt/omegaup/stuff/cron/assign_badges.py
            - --log-json
            - --port=3306
            volumeMounts:
            - name: omegaup
              mountPath: /opt/omegaup
            - name: cronjobs-secret
              mountPath: /home/ubuntu/.my.cnf
              subPath: my.cnf
          initContainers:
          - name: init-volume
            image: omegaup/frontend
            imagePullPolicy: IfNotPresent
            command: ['rsync', '-az', '/opt/omegaup/', '/mnt/omegaup/']
            volumeMounts:
            - name: omegaup
              mountPath: /mnt/omegaup
          volumes:
          - name: omegaup
            emptyDir: {}
          - name: cronjobs-secret
            secret:
              secretName: cronjobs-secret
